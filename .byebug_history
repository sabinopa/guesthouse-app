c
n
new_period.overlaps?(existing_period)
n
c
booking.start_date.class
start_date.class
start_date.to_date
new_period.to_date
existing_period
new_period
new_period.overlaps?(existing_period)
existing_period
n
existing_period
r = Range.new(booking.start_date, booking.end_date)
Range.all
booking.end_date
booking.start_date
(existing_period)
new_period
new_period.overlaps?(existing_period)
  new_period.overlaps?(existing_period)
n
c
n
c
n
c
n
quit
n
c
exit
c
n
end
@booking
exit
c
booking
booking.prices
prices
c
exit
c
n
c
@total_price
@booking
n
c
booking_params
booking.params
@booking
c
n
params
c
params
c
params[:end_date]
params[:start_date]
c
end_date
start_date
continue
c
@custom_price
total
price.to_f
price
c
total
price
@custom_price
c
room.price
custom_price.price
base_price_days
custom_price_days
room.price * base_price_days
custom_price.price * custom_price_days
c
custom_price.price
c
custom_price
c
custom_price
c
days_stayed
custom_price.price
custom_price
c
@booking
c
C
@booking
@booking.save
@booking
c
@booking
c
bookings
existing_period
new_period
new_period.overlaps?(existing_period)
c
